---
title: "STAT 456 Lab 3"
author: "YOUR NAME"
date: "\\today"
output: 
  pdf_document:
    fig_width: 3.6
    fig_height: 2.4
    highlight: kate
    number_sections: true
classoption: fleqn
geometry: margin=0.75in
linestretch: 1.25
fontfamily: cmbright
colorlinks: true
citecolor: blue
urlcolor: blue
header-includes: 
  # header/footer formats
  - \usepackage{fancyhdr}\pagestyle{fancy}\fancyhf{}\cfoot{\thepage}
  - \lhead{\footnotesize STAT 456 \copyright Brittney E. Bailey}
  # formats for headings
  - \usepackage[compact]{titlesec}
  - \titleformat{\section}[hang]{\setstretch{1}\ifnum\value{section}>0 \newpage \fi \Large }{\bfseries Problem \thesection}{5mm}{}[]
  - \titleformat{\subsection}[hang]{\vspace{11pt}\setstretch{1}\large}{\large\bfseries\thesubsection}{5mm}{}[]
  - \titleformat{\subsubsection}[hang]{\bfseries}{}{0mm}{}[]
  # additional text formatting
  - \AtBeginDocument{\raggedright}
  - \AtBeginEnvironment{quote}{\setstretch{1}\large}
  - \AtBeginEnvironment{Shaded}{\setstretch{1}}
  - \definecolor{shadecolor}{RGB}{248,248,255}
  # math packages
  - \usepackage{amsthm, mathtools, dsfont, bm, mleftright, cancel}
  # LaTeX shortcuts for math typesetting
  ## statistical functions
  - \DeclareMathOperator{\E}{E}
  - \DeclareMathOperator{\Var}{Var}
  - \DeclareMathOperator{\V}{V}
  - \DeclareMathOperator{\se}{SE}
  - \DeclareMathOperator{\Cov}{Cov}
  - \DeclareMathOperator{\Corr}{Corr}
  - \DeclareMathOperator{\dd}{d}
  ## model notation 
  - \DeclareMathOperator{\iid}{\overset{\textit{\footnotesize iid}}{\sim}}
  - \DeclarePairedDelimiter{\abs}{\lvert}{\rvert}
  ## link functions
  - \DeclareMathOperator{\logit}{logit}
  - \DeclareMathOperator{\probit}{probit}
  ## linear algebra
  - \DeclareMathOperator{\tp}{\mkern-1.5mu T}
  - \DeclareMathOperator{\trace}{Tr}
  ## distributions
  - \DeclareMathOperator{\N}{N}
  - \DeclareMathOperator{\Poisson}{Poisson}
  - \DeclareMathOperator{\Bernoulli}{Bernoulli}
  - \DeclareMathOperator{\Binomial}{Binomial}
  - \DeclareMathOperator{\NegBin}{NegBin}
  - \DeclareMathOperator{\dBeta}{Beta}
  - \DeclareMathOperator{\BetaBin}{Beta-Binomial}
  - \DeclareMathOperator{\dGamma}{Gamma}
  - \DeclareMathOperator{\Exp}{Exp}
---

```{r setup, include=FALSE}
# packages
library(tidyverse)
library(kableExtra)
library(GGally)
library(GLMsData)

# set defaults
knitr::opts_chunk$set(comment = " ")
ggplot2::theme_set(theme_classic)

# set code chunk defaults
knitr::opts_chunk$set(tidy = F, # display code as typed
                      #size = "small", # slightly smaller code font
                      message = FALSE,
                      warning = FALSE,
                      comment = "\t") 
# set black & white plot theme as default
ggplot2::theme_set(theme_classic()) 

# improve digit and NA display 
options(scipen = 1, knitr.kable.NA = '')
```
 
# R review {-}
We will live in the [**tidyverse**](https://www.tidyverse.org/packages/) this semester as much as possible. Here are links to relevant packages that will likely get the most use (**dplyr**, **tidyr**, **forcats**, and **ggplot2** are all loaded with **tidyverse**): 

* [**dplyr**](https://github.com/rstudio/cheatsheets/blob/main/data-transformation.pdf): for data manipulation and summary

* [**tidyr**](https://raw.githubusercontent.com/rstudio/cheatsheets/main/tidyr.pdf): for data manipulation 

* [**forcats**](https://raw.githubusercontent.com/rstudio/cheatsheets/main/factors.pdf): for working with factors

* [**ggplot2**](https://github.com/rstudio/cheatsheets/blob/main/data-visualization-2.1.pdf): for graphics

* [**mosaic**](https://github.com/mlaviolet/Mosaic-cheatsheets/blob/master/mosaic-cheatsheet-gf.pdf): wraps around many **tidyverse** functions to simplify syntax for plots and data summaries (`favstats()` is a keeper, but I would otherwise encourage you to learn **ggplot2** and **dplyr** for graphs and summaries, respectively) 

* [**kableExtra**](https://bookdown.org/yihui/rmarkdown-cookbook/kableextra.html): for cleaning up and customizing tables

  * and/or [**flextable**](https://ardata-fr.github.io/flextable-book/)
  * and/or [**gt**](https://gt.rstudio.com/articles/intro-creating-gt-tables.html) with [**gtsummary**](https://www.danieldsjoberg.com/gtsummary/index.html) 

* [**broom**](https://cran.r-project.org/web/packages/broom/vignettes/broom.html): for quick model summaries

> You might also find the `skimr()` function of the **skimr** package useful. It is one of my favorite "quick look at the data" functions, but the document won't knit unless you use certain settings. For now, use it in the console or in a code chunk with option `eval = FALSE`. 


<!----------------------------------------------------------------------------->
# **Dunn & Smyth 4.6** Find your solutions to Homework 2 Problem 3 to help work through the following questions.

## <!-- .1 -->The exponential distribution is given by $f(y \,\vert\, \mu) =  \frac{\exp(-y/\mu)}{\mu}$. Use the R function `rexp()` to generate 100 random observations from the exponential distribution with $\mu = 1$ (in R, the parameter of the exponential distribution is the rate, where the rate is $frac{1}{\mu}$).

```{r}
values <-rexp(100, rate = 1)
values
```



## <!-- .2 -->Use R to plot the likelihood function for the randomly generated data from $\mu = 0.75$ to $\mu = 1.25$.  Use vertical lines to show the location of $\hat \mu$ and $\mu_0 = 1$. 


```{r}
mus <- seq(.75, 1.25, length.out = 1000)




exp(-sum(values)/1.251)/1.25^100



samp <- as.data.frame(mus)%>% mutate(like = exp(-sum(values)/mus)/mus^length(values))
  

ggplot(data = samp, aes(x = mus, y= like)) + geom_line() +
  geom_vline(xintercept = mean(values))+
               geom_vline(xintercept = mean(mus))

```


## <!-- .3 -->Compute the Wald, score and likelihood ratio statistics for testing $H_0: \mu = 1$ and the corresponding critical value when $\alpha = 0.05$ (recall: W, S, and L follow approximately a $\chi^2_1$). What do you conclude for each test? What are the corresponding p-values?

```{r}
wald <- mean(values - 1)^2/(mean(values)^2/length(values))
score <- length(values)*(mean(values)-1)^2
lrt <- 2*length(values)*(mean(values)-log(mean(values))-1)

pchisq(wald, df =1)
pchisq(score, df =1)
pchisq(lrt, df =1)

```


## <!-- .4 -->Find a 95% confidence interval for $\mu$ using the Wald method. 

```{r}
crit <- 1.96 #95% 
se <- sd(values)/sqrt(length(values))
wald + crit * se
wald - crit * se
```



## <!-- .5 -->Plot the Wald, score and likelihood ratio test statistics against possible values of $\hat \mu$ between 0.7 and 1.3. Use a horizontal line to show the location of the critical value. When do the three tests coincide? When $\alpha = 0.05$ and $n = 100$, compare the range(s) of $\hat \mu$ required to reject the null hypothesis for each test. 

```{r}
ggplot(data = samp, aes(x = mus)) + geom_density() + geom_hline(yintercept = wald)+ geom_hline(yintercept = score)+ geom_hline(yintercept = lrt)



```

